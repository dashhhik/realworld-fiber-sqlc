// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUser = `-- name: GetUser :one

SELECT id, email, username, password FROM users WHERE id = $1
`

// user.sql
func (q *Queries) GetUser(ctx context.Context, id int64) (User, error) {
	row := q.db.QueryRow(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Username,
		&i.Password,
	)
	return i, err
}

const updateProfile = `-- name: UpdateProfile :exec
UPDATE profiles SET bio = $2, image = $3 WHERE user_id = $1
`

type UpdateProfileParams struct {
	UserID pgtype.Int8
	Bio    pgtype.Text
	Image  pgtype.Text
}

func (q *Queries) UpdateProfile(ctx context.Context, arg UpdateProfileParams) error {
	_, err := q.db.Exec(ctx, updateProfile, arg.UserID, arg.Bio, arg.Image)
	return err
}

const updateUser = `-- name: UpdateUser :exec
UPDATE users SET email = $2, username = $3, password = $4 WHERE id = $1
`

type UpdateUserParams struct {
	ID       int64
	Email    string
	Username string
	Password string
}

func (q *Queries) UpdateUser(ctx context.Context, arg UpdateUserParams) error {
	_, err := q.db.Exec(ctx, updateUser,
		arg.ID,
		arg.Email,
		arg.Username,
		arg.Password,
	)
	return err
}
